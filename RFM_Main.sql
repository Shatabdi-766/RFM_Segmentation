-- RFM_Category_Combination
CREATE or Replace VIEW RFM_SEGMENT AS
WITH RFM_INITIAL_CALCULATION AS  (
SELECT 
    CUSTOMERNAME,
    ROUND(SUM(SALES),0) AS MONETARY_VALUE,
    COUNT(ORDERNUMBER) AS FREQUENCY,
    DATEDIFF(
        (SELECT MAX(STR_TO_DATE(`ORDERDATE_1`, '%d/%m/%y')) FROM sales_data_for_rfm_segmentation),
        MAX(STR_TO_DATE(`ORDERDATE_1`, '%d/%m/%y'))
        
    ) AS RECENCY
FROM `sales_data_for_rfm_segmentation`
GROUP BY CUSTOMERNAME), 
-- RFM SCORE
-- SELECT 
-- C.*,
-- NTILE(4) OVER (ORDER BY C.RECENCY DESC) AS RFM_RECENCY_SCORE,
-- NTILE(4) OVER (ORDER BY C.FREQUENCY DESC) AS RFM_FREQUENCY_SCORE,
-- NTILE(4) OVER (ORDER BY C.MONETARY_VALUE DESC) AS RFM_MONETARY_SCORE
-- FROM RFM_INITIAL_CALCULATION AS C ; 

RFM_SCORE_CALCULATION AS (
SELECT 
C.*,
NTILE(4) OVER (ORDER BY C.RECENCY DESC) AS RFM_RECENCY_SCORE,
NTILE(4) OVER (ORDER BY C.FREQUENCY DESC) AS RFM_FREQUENCY_SCORE,
NTILE(4) OVER (ORDER BY C.MONETARY_VALUE DESC) AS RFM_MONETARY_SCORE
FROM RFM_INITIAL_CALCULATION AS C)

SELECT 
    R.CUSTOMERNAME,
    (R.RFM_RECENCY_SCORE + R.RFM_FREQUENCY_SCORE + R.RFM_MONETARY_SCORE) AS RFM_TOTAL_SCORE,
    CONCAT_WS(R.RFM_RECENCY_SCORE,
            R.RFM_FREQUENCY_SCORE,
            R.RFM_MONETARY_SCORE) AS RFM_CATEGORY_COMBINATION
FROM
    RFM_SCORE_CALCULATION AS R;

SELECT * FROM RFM_SEGMENT
order by 3 desc;

-- only Category
SELECT DISTINCT RFM_CATEGORY_COMBINATION 
    FROM RFM_SEGMENT
ORDER BY 1;

-- RFM Customer Segmentation

WITH RFM_INITIAL_CALCULATION AS (
    SELECT
        CUSTOMERNAME,
        ROUND(SUM(SALES), 0) AS MONETARY_VALUE,
        COUNT(ORDERNUMBER) AS FREQUENCY,
        MAX(STR_TO_DATE(`ORDERDATE_1`, '%d/%m/%y')) AS RECENT_ORDER_DATE
    FROM `sales_data_for_rfm_segmentation`
    GROUP BY CUSTOMERNAME
),
RFM_SCORE_CALCULATION AS (
    SELECT
        C.*,
        NTILE(4) OVER (ORDER BY RECENT_ORDER_DATE DESC) AS RFM_RECENCY_SCORE,
        NTILE(4) OVER (ORDER BY FREQUENCY DESC) AS RFM_FREQUENCY_SCORE,
        NTILE(4) OVER (ORDER BY MONETARY_VALUE DESC) AS RFM_MONETARY_SCORE
    FROM RFM_INITIAL_CALCULATION AS C
)
    
   SELECT 
    CUSTOMERNAME,
    CASE
        WHEN RFM_CATEGORY_COMBINATION IN (111, 112, 121, 123, 132, 211, 211, 212, 114, 141) THEN 'CHURNED CUSTOMER'
        WHEN RFM_CATEGORY_COMBINATION IN (133, 134, 143, 244, 334, 343, 344, 144) THEN 'SLIPPING AWAY, CANNOT LOSE'
        WHEN RFM_CATEGORY_COMBINATION IN (311, 411, 331) THEN 'NEW CUSTOMERS'
        WHEN RFM_CATEGORY_COMBINATION IN (222, 231, 221,  223, 233, 322) THEN 'POTENTIAL CHURNERS'
        WHEN RFM_CATEGORY_COMBINATION IN (323, 333,321, 341, 422, 332, 432) THEN 'ACTIVE'
        WHEN RFM_CATEGORY_COMBINATION IN (433, 434, 443, 444) THEN 'LOYAL'
    ELSE 'CANNOT BE DEFINED'
    END AS CUSTOMER_SEGMENT

FROM RFM_SEGMENT;

-- Number of Customer Segment
WITH CTE1 AS (
SELECT 
    CUSTOMERNAME,
    CASE
        WHEN RFM_CATEGORY_COMBINATION IN (111, 112, 121, 123, 132, 211, 211, 212, 114, 141) THEN 'CHURNED CUSTOMER'
        WHEN RFM_CATEGORY_COMBINATION IN (133, 134, 143, 244, 334, 343, 344, 144) THEN 'SLIPPING AWAY, CANNOT LOSE'
        WHEN RFM_CATEGORY_COMBINATION IN (311, 411, 331) THEN 'NEW CUSTOMERS'
        WHEN RFM_CATEGORY_COMBINATION IN (222, 231, 221,  223, 233, 322) THEN 'POTENTIAL CHURNERS'
        WHEN RFM_CATEGORY_COMBINATION IN (323, 333,321, 341, 422, 332, 432) THEN 'ACTIVE'
        WHEN RFM_CATEGORY_COMBINATION IN (433, 434, 443, 444) THEN 'LOYAL'
    ELSE 'CANNOT BE DEFINED'
    END AS CUSTOMER_SEGMENT

FROM RFM_SEGMENT)

SELECT CUSTOMER_SEGMENT , COUNT(*) AS NUMBER_OF_CUSTOMERS
FROM CTE1
GROUP BY 1
ORDER BY 2 DESC;

-- how does the query classify customers into different risk levels based on their recency of purchase 
WITH CUSTOMERRFM AS (
    SELECT
        CUSTOMERNAME,
        ROUND(AVG(SALES), 0) AS AVG_MONETARY_VALUE,
        COUNT(*) AS FREQUENCY,
        MAX(`ORDERDATE_1`) AS RECENCY,
        abs(DATEDIFF(CURDATE(), MAX(`ORDERDATE_1`))) AS RECENCYDAYS
    FROM `sales_data_for_rfm_segmentation`
    GROUP BY CUSTOMERNAME
),

RFM_SEGMENT AS (
    SELECT
        CUSTOMERNAME,
        NTILE(4) OVER (ORDER BY RECENCY DESC) AS RFM_RECENCY,
        NTILE(4) OVER (ORDER BY FREQUENCY DESC) AS RFM_FREQUENCY,
        NTILE(4) OVER (ORDER BY AVG_MONETARY_VALUE DESC) AS RFM_MONETARY_VALUE,
        RECENCYDAYS,
        CASE
            WHEN RECENCYDAYS > 7000 THEN 'High Risk'
            WHEN RECENCYDAYS > 300 THEN 'Medium Risk'
            ELSE 'Low Risk'
        END AS RiskLevel
    FROM CUSTOMERRFM
)

select CUSTOMERNAME,
RECENCYDAYS,
RiskLevel
 from rfm_segment;
 
 -- Identify RFM segments with a higher risk of customer churn 
 WITH CUSTOMERRFM AS (
    SELECT
        CUSTOMERNAME,
        ROUND(AVG(SALES), 0) AS AVG_MONETARY_VALUE,
        COUNT(*) AS FREQUENCY,
        MAX(`ORDERDATE_1`) AS RECENCY,
        DATEDIFF(CURDATE(), MAX(`ORDERDATE_1`)) AS RECENCYDAYS
    FROM `sales_data_for_rfm_segmentation`
    GROUP BY CUSTOMERNAME
),

RFM_SEGMENT AS (
    SELECT
        CUSTOMERNAME,
        NTILE(4) OVER (ORDER BY RECENCY DESC) AS RFM_RECENCY,
        NTILE(4) OVER (ORDER BY FREQUENCY DESC) AS RFM_FREQUENCY,
        NTILE(4) OVER (ORDER BY AVG_MONETARY_VALUE DESC) AS RFM_MONETARY_VALUE,
        RECENCYDAYS,
        CASE
            WHEN RECENCYDAYS > 7000 THEN 'High Risk'
            WHEN RECENCYDAYS > 300 THEN 'Medium Risk'
            ELSE 'Low Risk'
        END AS RiskLevel
    FROM CUSTOMERRFM
),

CTE1 AS (
    SELECT 
        CUSTOMERNAME,
        CASE
            WHEN CONCAT(RFM_RECENCY, RFM_FREQUENCY, RFM_MONETARY_VALUE) IN ('111', '112', '121', '123', '132', '211', '212', '114', '141') THEN 'CHURNED CUSTOMER'
            WHEN CONCAT(RFM_RECENCY, RFM_FREQUENCY, RFM_MONETARY_VALUE) IN ('133', '134', '143', '244', '334', '343', '344', '144') THEN 'SLIPPING AWAY, CANNOT LOSE'
            WHEN CONCAT(RFM_RECENCY, RFM_FREQUENCY, RFM_MONETARY_VALUE) IN ('311', '411', '331') THEN 'NEW CUSTOMERS'
            WHEN CONCAT(RFM_RECENCY, RFM_FREQUENCY, RFM_MONETARY_VALUE) IN ('222', '231', '221', '223', '233', '322') THEN 'POTENTIAL CHURNERS'
            WHEN CONCAT(RFM_RECENCY, RFM_FREQUENCY, RFM_MONETARY_VALUE) IN ('323', '333', '321', '341', '422', '332', '432') THEN 'ACTIVE'
            WHEN CONCAT(RFM_RECENCY, RFM_FREQUENCY, RFM_MONETARY_VALUE) IN ('433', '434', '443', '444') THEN 'LOYAL'
            ELSE 'CANNOT BE DEFINED'
        END AS CUSTOMER_SEGMENT,
        RiskLevel
    FROM RFM_SEGMENT
)

SELECT 
    
    CUSTOMERNAME,
    RiskLevel,
    CUSTOMER_SEGMENT
FROM
    CTE1
GROUP BY CUSTOMER_SEGMENT , CUSTOMERNAME , RiskLevel ;

-- Number of Risk Level
WITH CUSTOMERRFM AS (
    SELECT
        CUSTOMERNAME,
        ROUND(AVG(SALES), 0) AS AVG_MONETARY_VALUE,
        COUNT(*) AS FREQUENCY,
        MAX(`ORDERDATE_1`) AS RECENCY,
        abs(DATEDIFF(CURDATE(), MAX(`ORDERDATE_1`))) AS RECENCYDAYS
    FROM `sales_data_for_rfm_segmentation`
    GROUP BY CUSTOMERNAME
),

RFM_SEGMENT AS (
    SELECT
        CUSTOMERNAME,
        NTILE(4) OVER (ORDER BY RECENCY DESC) AS RFM_RECENCY,
        NTILE(4) OVER (ORDER BY FREQUENCY DESC) AS RFM_FREQUENCY,
        NTILE(4) OVER (ORDER BY AVG_MONETARY_VALUE DESC) AS RFM_MONETARY_VALUE,
        RECENCYDAYS,
        CASE
            WHEN RECENCYDAYS > 7000 THEN 'High Risk'
            WHEN RECENCYDAYS > 300 THEN 'Medium Risk'
            ELSE 'Low Risk'
        END AS RiskLevel
    FROM CUSTOMERRFM
)

select RiskLevel, count(RiskLevel) as Number_of_Risk_level from rfm_segment
group by 1
order by 2 desc;


